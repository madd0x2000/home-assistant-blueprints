blueprint:
  name: Dynamic HVAC Control (Multi-Zone, Solar & Price Aware + Logging)
  description: >
    Styr flera HVAC-zoner baserat på inomhustemperatur, elpris, solproduktion,
    nattläge, boostläge och hysteresis. Global hysteresis kan ersättas av individuell per zon.
    Loggar varje beslut per zon i loggboken och systemlogg.
  domain: automation
  input:
    # --- Sensorer ---
    solar_production_sensor:
      name: Solproduktionssensor
      selector:
        entity:
          domain: sensor
    price_sensor:
      name: Elpris sensor
      selector:
        entity:
          domain: sensor

    # --- Globala inställningar ---
    hysteresis:
      name: Global hysteresis
      default: 0.5
      selector:
        number:
          min: 0.1
          max: 2.0
          step: 0.1
          unit_of_measurement: "°C"

    night_start:
      name: Nattläge starttid
      default: "22:00:00"
      selector:
        time:
    night_end:
      name: Nattläge sluttid
      default: "06:00:00"
      selector:
        time:

    # --- Boostläge ---
    boost_input:
      name: Boost-läge
      selector:
        entity:
          domain: input_boolean
    boost_temp_increase:
      name: Temperaturökning vid boost
      default: 2.0
      selector:
        number:
          min: 0
          max: 5
          step: 0.5
          unit_of_measurement: "°C"

    # --- Zoninställningar ---
    zones:
      name: Zoner
      selector:
        target:
          entity:
            domain: climate
      default: []
    zone_sensors:
      name: Temperatur-sensorer
      selector:
        target:
          entity:
            domain: sensor
      default: []
    zone_target_temps:
      name: Dagmål för zoner
      default: [21.0]
      selector:
        object:
    zone_night_temps:
      name: Nattmål för zoner
      default: [19.0]
      selector:
        object:
    zone_hysteresis:
      name: Individuell hysteresis
      default: []
      selector:
        object:

variables:
  solar_production: "{{ states('!input solar_production_sensor') | float(0) }}"
  electricity_price: >
    {% set s = states('!input price_sensor') %}
    {% if s not in ['unknown','unavailable','none'] %}
      {{ s | float(100) }}
    {% else %}
      100
    {% endif %}
  boost_active: "{{ is_state('!input boost_input', 'on') }}"
  global_hysteresis: "!input hysteresis"
  is_night_mode: >
    {% set now = now().strftime('%H:%M:%S') %}
    {% set start = '!input night_start' %}
    {% set end = '!input night_end' %}
    {% if start < end %}
      {{ start <= now < end }}
    {% else %}
      {{ now >= start or now < end }}
    {% endif %}

trigger:
  - platform: state
    entity_id: !input solar_production_sensor
  - platform: state
    entity_id: !input price_sensor
  - platform: state
    entity_id: !input boost_input
  - platform: time_pattern
    minutes: "/10"

action:
  - variables:
      hvacs: !input zones
      sensors: !input zone_sensors
      day_targets: !input zone_target_temps
      night_targets: !input zone_night_temps
      zone_hyst: !input zone_hysteresis

  - repeat:
      count: "{{ hvacs | count }}"
      sequence:
        - variables:
            hvac: "{{ hvacs[repeat.index-1] }}"
            sensor: "{{ sensors[repeat.index-1] }}"
            day_target: "{{ day_targets[repeat.index-1] | float(21) }}"
            night_target: "{{ night_targets[repeat.index-1] | float(19) }}"
            hysteresis: >
              {% if repeat.index-1 < (zone_hyst | count) %}
                {{ zone_hyst[repeat.index-1] | float(global_hysteresis) }}
              {% else %}
                {{ global_hysteresis }}
              {% endif %}
            current_temp: "{{ states(sensor) | float(0) }}"
            base_target: >
              {% if is_night_mode %}
                {{ night_target }}
              {% else %}
                {{ day_target }}
              {% endif %}
            boost_target: >
              {% if boost_active %}
                {{ base_target + !input boost_temp_increase }}
              {% else %}
                {{ base_target }}
              {% endif %}
            limited_target: "{{ [ [boost_target, 10] | max, 31 ] | min }}"
            needs_heating: "{{ current_temp < (limited_target - hysteresis) }}"
            needs_off: "{{ current_temp > (limited_target + hysteresis) }}"

        - choose:
            - conditions: "{{ needs_heating }}"
              sequence:
                - service: climate.set_hvac_mode
                  target:
                    entity_id: "{{ hvac }}"
                  data:
                    hvac_mode: heat
                - service: climate.set_temperature
                  target:
                    entity_id: "{{ hvac }}"
                  data:
                    temperature: "{{ limited_target }}"
                - service: logbook.log
                  data:
                    name: HVAC
                    message: >
                      Zon {{ hvac }} värmer upp till {{ limited_target }}°C
                      (Nu: {{ current_temp }}°C, hyst: {{ hysteresis }}°C)
                - service: system_log.write
                  data:
                    level: info
                    logger: hvac.automation
                    message: >
                      [{{ hvac }}] Heating → target {{ limited_target }}°C,
                      current {{ current_temp }}°C (hyst: {{ hysteresis }}°C)

            - conditions: "{{ needs_off }}"
              sequence:
                - service: climate.set_hvac_mode
                  target:
                    entity_id: "{{ hvac }}"
                  data:
                    hvac_mode: 'off'
                - service: logbook.log
                  data:
                    name: HVAC
                    message: >
                      Zon {{ hvac }} stängs av (Nu: {{ current_temp }}°C,
                      bör: {{ limited_target }}°C, hyst: {{ hysteresis }}°C)
                - service: system_log.write
                  data:
                    level: info
                    logger: hvac.automation
                    message: >
                      [{{ hvac }}] Off → current {{ current_temp }}°C,
                      target {{ limited_target }}°C (hyst: {{ hysteresis }}°C)

mode: queued
max: 10
